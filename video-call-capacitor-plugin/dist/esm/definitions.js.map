{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface StreamVideoCallCapacitorPlugin {\n  initializeVideoCall(options: StreamVideoInitOptions): Promise<void>;\n  joinCall(options: StreamVideoCallOptions): Promise<void>;\n\n  addListener<EventType extends StreamVideoCallEvents>(\n    event: EventType,\n    listenerFunc: (event: StreamVideoCallEventPayload[EventType]) => void,\n  ): Promise<PluginListenerHandle>;\n\n  removeAllListeners(): Promise<void>;\n}\n\nexport interface UserInfo {\n  id: string;\n  name: string;\n  imageURL?: string;\n}\n\nexport interface StreamVideoInitOptions {\n  apiKey: string;\n  token: string;\n  preferredExtension: string;\n  user: UserInfo;\n}\n\nexport interface StreamVideoCallOptions {\n  callId: string;\n}\n\nexport type StreamVideoCallEvents = 'callJoined' | 'callEnded';\n\nexport interface StreamVideoCallEventPayload {\n  callJoined: { callId: string; userId: string };\n  callEnded: { callId: string };\n}\n\nexport interface PluginListenerHandle {\n  remove: () => Promise<void>;\n}\n"]}