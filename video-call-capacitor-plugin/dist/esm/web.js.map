{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAU5C,MAAM,OAAO,2BAA4B,SAAQ,SAAS;IACxD,KAAK,CAAC,mBAAmB,CAAC,OAA+B;QACvD,OAAO,CAAC,GAAG,CAAC,8CAA8C,EAAE,OAAO,CAAC,CAAC;IACvE,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,OAA+B;QAC5C,OAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,OAAO,CAAC,CAAC;IACrE,CAAC;IAED,WAAW,CACT,KAAgB,EAChB,YAAqE;QAErE,OAAO,CAAC,GAAG,CAAC,+CAA+C,KAAK,EAAE,CAAC,CAAC;QACpE,OAAO,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IAChD,CAAC;IAED,kBAAkB;QAChB,OAAO,CAAC,GAAG,CAAC,iDAAiD,KAAK,EAAE,CAAC,CAAC;QACtE,OAAO,KAAK,CAAC,kBAAkB,EAAE,CAAC;IACpC,CAAC;CACF","sourcesContent":["import type { PluginListenerHandle } from '@capacitor/core';\nimport { WebPlugin } from '@capacitor/core';\n\nimport type {\n  StreamVideoCallCapacitorPlugin,\n  StreamVideoInitOptions,\n  StreamVideoCallOptions,\n  StreamVideoCallEventPayload,\n  StreamVideoCallEvents,\n} from './definitions';\n\nexport class StreamVideoCallCapacitorWeb extends WebPlugin implements StreamVideoCallCapacitorPlugin {\n  async initializeVideoCall(options: StreamVideoInitOptions): Promise<void> {\n    console.log('[StreamVideoCall]: initialize web video call', options);\n  }\n\n  async joinCall(options: StreamVideoCallOptions): Promise<void> {\n    console.log('[StreamVideoCall]: joinCall web video call', options);\n  }\n\n  addListener<EventType extends StreamVideoCallEvents>(\n    event: EventType,\n    listenerFunc: (event: StreamVideoCallEventPayload[EventType]) => void,\n  ): Promise<PluginListenerHandle> {\n    console.log(`[StreamVideoCall]: Added listener for event ${event}`);\n    return super.addListener(event, listenerFunc);\n  }\n\n  removeAllListeners(): Promise<void> {\n    console.log(`[StreamVideoCall]: Removed listener for event ${event}`);\n    return super.removeAllListeners();\n  }\n}\n"]}